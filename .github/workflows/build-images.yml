name: Build Image and Deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  build-images:
    name: Build and Push Docker Images to ECR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Log into Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag and push Sellaf API image to Amazon ECR
        id: build-sellaf-api
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry }}

    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
      docker_username: ${{ steps.login-ecr.outputs.docker_username_022024849961_dkr_ecr_us_east_2_amazonaws_com }}
      docker_password: ${{ steps.login-ecr.outputs.docker_password_022024849961_dkr_ecr_us_east_2_amazonaws_com }}
      image_version: ${{ github.sha }}

  set-env-vars:
    name: Set enviroment variables for all services
    runs-on: ubuntu-latest
    needs: build-images
    steps:
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DATABASE_URL: ${{ secrets.DATABASE_URL }}
          envkey_PORT: ${{ secrets.PORT }}
          envkey_APP_ENVIRONMENT: ${{ secrets.APP_ENVIRONMENT }}
          envkey_KEYCLOAK_SERVER: ${{ secrets.KEYCLOAK_SERVER }}
          envkey_KEYCLOAK_SERVER_REALM_NAME: ${{ secrets.KEYCLOAK_SERVER_REALM_NAME }}
          envkey_KEYCLOAK_ADMIN_CLIENT_ID: ${{ secrets.KEYCLOAK_ADMIN_CLIENT_ID }}
          envkey_KEYCLOAK_ADMIN_CLIENT_SECRET: ${{ secrets.KEYCLOAK_ADMIN_CLIENT_SECRET }}
          envkey_KC_SELLAF_API_CLIENT_ID: ${{ secrets.KC_SELLAF_API_CLIENT_ID }}
          envkey_KC_SELLAF_API_CLIENT_SECRET: ${{ secrets.KC_SELLAF_API_CLIENT_SECRET }}
          envkey_SMTP_HOST: ${{ secrets.SMTP_HOST }}
          envkey_SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          envkey_SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          envkey_REDIS_HOST: ${{ secrets.REDIS_HOST }}
          envkey_REDIS_PORT: ${{ secrets.REDIS_PORT }}
          envkey_BCRYPT_TOKEN_SALT: ${{ secrets.BCRYPT_TOKEN_SALT }}
          envkey_ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          envkey_ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          envkey_ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          envkey_FLUTTERWAVE_API_BASE_URL: ${{ secrets.FLUTTERWAVE_API_BASE_URL }}
          envkey_FLUTTERWAVE_PUBLIC_KEY: ${{ secrets.FLUTTERWAVE_PUBLIC_KEY }}
          envkey_FLUTTERWAVE_SECRET_KEY: ${{ secrets.FLUTTERWAVE_SECRET_KEY }}
          envkey_FLUTTERWAVE_ENCRYPTION_KEY: ${{ secrets.FLUTTERWAVE_ENCRYPTION_KEY }}
          envkey_FLUTTERWAVE_TEST_PUBLIC_KEY: ${{ secrets.FLUTTERWAVE_TEST_PUBLIC_KEY }}
          envkey_FLUTTERWAVE_TEST_SECRET_KEY: ${{ secrets.FLUTTERWAVE_TEST_SECRET_KEY }}
          envkey_FLUTTERWAVE_TEST_ENCRYPTION_KEY: ${{ secrets.FLUTTERWAVE_TEST_ENCRYPTION_KEY }}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_IMAGE_VERSION: ${{ needs.build-images.outputs.image_version }}
          file_name: .env
          fail_on_empty: false

      - name: Make DB envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          file_name: .env.db
          fail_on_empty: false

      - name: Make Keycloak envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DB_VENDOR: "POSTGRES"
          envkey_DB_ADDR: "postgres"
          envkey_DB_DATABASE: ${{ secrets.POSTGRES_DB }}
          envkey_DB_USER: ${{ secrets.POSTGRES_USER }}
          envkey_DB_SCHEMA: "public"
          envkey_DB_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_KEYCLOAK_ADMIN: ${{ secrets.KEYCLOAK_ADMIN }}
          envkey_KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
          envkey_KC_MASTER_CLIENT_SECRET: ${{ secrets.KEYCLOAK_ADMIN_CLIENT_SECRET }}
          envkey_KC_SELLAF_API_CLIENT_SECRET: ${{ secrets.KC_SELLAF_API_CLIENT_SECRET }}
          file_name: .env.kc
          fail_on_empty: false

  deploy-to-ec2:
    name: Deploy to AWS EC2 instance
    runs-on: ubuntu-latest
    needs: set-env-vars
    steps:
      - name: Checkout the files
        uses: actions/checkout@v2

      - name: Deploy to my EC2 instance
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/dist/, /node_modules/, /prisma/, /src/, /test/"

  # deploy:
  #   name: Deploy to EC2
  #   runs-on: ubuntu-latest
  #   steps:

